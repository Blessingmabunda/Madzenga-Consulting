{"ast":null,"code":"var _jsxFileName = \"/Users/softidoc/Documents/MyProjects/Madzenga Consulting/src/components/landingpage/Services.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Services = () => {\n  _s();\n  const [isMobile, setIsMobile] = useState(false);\n  const [imagesVisible, setImagesVisible] = useState([]);\n  const serviceRefs = useRef([]);\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 768); // Check for mobile screens (less than or equal to 768px)\n    };\n    window.addEventListener('resize', handleResize);\n    handleResize(); // Initial check\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  useEffect(() => {\n    // Setting up Intersection Observer\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach((entry, index) => {\n        if (entry.isIntersecting) {\n          setImagesVisible(prev => [...prev, index]);\n        }\n      });\n    }, {\n      threshold: 0.1\n    } // 10% of the image should be visible to trigger\n    );\n    serviceRefs.current.forEach(ref => observer.observe(ref));\n    return () => observer.disconnect(); // Clean up observer\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: 'Arial, sans-serif',\n      padding: '20px',\n      maxWidth: '1200px',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontSize: '24px',\n        color: '#333',\n        marginBottom: '40px',\n        textAlign: 'center'\n      },\n      children: \"Our Services\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        gap: '10px',\n        flexWrap: 'wrap',\n        alignItems: 'center'\n      },\n      children: services.map((service, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: el => serviceRefs.current[index] = el // Attach the ref for each image container\n        ,\n        style: {\n          flex: isMobile ? '1 0 100%' : '1 0 30%',\n          maxWidth: isMobile ? '100%' : '30%',\n          marginBottom: '20px',\n          boxSizing: 'border-box',\n          opacity: imagesVisible.includes(index) ? 1 : 0,\n          // Only show images that have come into view\n          transition: 'opacity 0.5s ease'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: require(`./../../assets/${service.icon}`),\n          alt: `Service ${index + 1}`,\n          style: {\n            width: '100%',\n            height: 'auto',\n            objectFit: 'contain',\n            display: 'block'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Services, \"VAlC8fl+mvdwY8yo4jlfsr9SH9I=\");\n_c = Services;\nconst services = [{\n  icon: '1.png'\n}, {\n  icon: '2.png'\n}, {\n  icon: '3.png'\n}];\nexport default Services;\nvar _c;\n$RefreshReg$(_c, \"Services\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","Services","_s","isMobile","setIsMobile","imagesVisible","setImagesVisible","serviceRefs","handleResize","window","innerWidth","addEventListener","removeEventListener","observer","IntersectionObserver","entries","forEach","entry","index","isIntersecting","prev","threshold","current","ref","observe","disconnect","style","fontFamily","padding","maxWidth","margin","children","fontSize","color","marginBottom","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","gap","flexWrap","alignItems","services","map","service","el","flex","boxSizing","opacity","includes","transition","src","require","icon","alt","width","height","objectFit","_c","$RefreshReg$"],"sources":["/Users/softidoc/Documents/MyProjects/Madzenga Consulting/src/components/landingpage/Services.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst Services = () => {\n  const [isMobile, setIsMobile] = useState(false);\n  const [imagesVisible, setImagesVisible] = useState([]);\n\n  const serviceRefs = useRef([]);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 768); // Check for mobile screens (less than or equal to 768px)\n    };\n\n    window.addEventListener('resize', handleResize);\n    handleResize(); // Initial check\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    // Setting up Intersection Observer\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry, index) => {\n          if (entry.isIntersecting) {\n            setImagesVisible((prev) => [...prev, index]);\n          }\n        });\n      },\n      { threshold: 0.1 } // 10% of the image should be visible to trigger\n    );\n\n    serviceRefs.current.forEach((ref) => observer.observe(ref));\n\n    return () => observer.disconnect(); // Clean up observer\n  }, []);\n\n  return (\n    <div style={{ fontFamily: 'Arial, sans-serif', padding: '20px', maxWidth: '1200px', margin: '0 auto' }}>\n      <h1 style={{ fontSize: '24px', color: '#333', marginBottom: '40px', textAlign: 'center' }}>Our Services</h1>\n\n      <div style={{ display: 'flex', justifyContent: 'center', gap: '10px', flexWrap: 'wrap', alignItems: 'center' }}>\n        {services.map((service, index) => (\n          <div\n            key={index}\n            ref={(el) => (serviceRefs.current[index] = el)} // Attach the ref for each image container\n            style={{\n              flex: isMobile ? '1 0 100%' : '1 0 30%',\n              maxWidth: isMobile ? '100%' : '30%',\n              marginBottom: '20px',\n              boxSizing: 'border-box',\n              opacity: imagesVisible.includes(index) ? 1 : 0, // Only show images that have come into view\n              transition: 'opacity 0.5s ease',\n            }}\n          >\n            <img\n              src={require(`./../../assets/${service.icon}`)}\n              alt={`Service ${index + 1}`}\n              style={{\n                width: '100%',\n                height: 'auto',\n                objectFit: 'contain',\n                display: 'block',\n              }}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst services = [\n  { icon: '1.png' },\n  { icon: '2.png' },\n  { icon: '3.png' },\n];\n\nexport default Services;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}